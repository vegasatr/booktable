#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from src.bot.database.connection import get_db_connection
from psycopg2.extras import DictCursor

def check_available_restaurants():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    try:
        conn = get_db_connection()
        cur = conn.cursor(cursor_factory=DictCursor)
        
        print("üçΩÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:")
        print("=" * 50)
        
        cur.execute("SELECT name, booking_contact FROM restaurants WHERE active = 'true' ORDER BY name LIMIT 20;")
        restaurants = cur.fetchall()
        
        if restaurants:
            for r in restaurants:
                contact = r['booking_contact'] or '–ù–ï–¢ –ö–û–ù–¢–ê–ö–¢–ê'
                print(f"  - {r['name']} (–∫–æ–Ω—Ç–∞–∫—Ç: {contact})")
        else:
            print("  ‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –≤ –±–∞–∑–µ")
            
        print(f"\n–í—Å–µ–≥–æ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤: {len(restaurants)}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –í–°–ï —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –≤ –±–∞–∑–µ:")
        print("=" * 50)
        
        cur.execute("SELECT name, active, booking_contact FROM restaurants ORDER BY name LIMIT 20;")
        all_restaurants = cur.fetchall()
        
        if all_restaurants:
            for r in all_restaurants:
                contact = r['booking_contact'] or '–ù–ï–¢ –ö–û–ù–¢–ê–ö–¢–ê'
                status = r['active'] or '–ù–ï–¢ –°–¢–ê–¢–£–°–ê'
                print(f"  - {r['name']} (—Å—Ç–∞—Ç—É—Å: {status}, –∫–æ–Ω—Ç–∞–∫—Ç: {contact})")
        else:
            print("  ‚ùå –¢–∞–±–ª–∏—Ü–∞ restaurants –ø—É—Å—Ç–∞!")
            
        print(f"\n–í—Å–µ–≥–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –≤ –±–∞–∑–µ: {len(all_restaurants)}")
        
        cur.close()
        conn.close()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤: {e}")

if __name__ == "__main__":
    check_available_restaurants() 