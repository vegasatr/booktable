#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å —Ä–∞–±–æ—á–∏–º–∏ –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏
"""

import sys
import os
import asyncio
from datetime import date, time as datetime_time
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from src.bot.managers.booking_manager import BookingManager

class MockUser:
    def __init__(self):
        self.id = 5419235215  # –†–µ–∞–ª—å–Ω—ã–π ID alextex
        self.username = "alextex"
        self.first_name = "–êLEX"
        self.last_name = ""

async def test_notification_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—É—é —Å–∏—Å—Ç–µ–º—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    print("üß™ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    booking_data = {
        'date': date.today(),
        'time': datetime_time(19, 30),
        'guests': 2,
        'restaurant': {'name': 'Test Restaurant'}
    }
    
    user = MockUser()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
    test_contacts = [
        ("Telegram username", "@alextex"),
        ("Username —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º =", "=@alextex"),
        ("Chat ID", "5419235215"),  # ID alextex'–∞
        ("–ü—É—Å—Ç–æ–π –∫–æ–Ω—Ç–∞–∫—Ç", ""),
    ]
    
    for i, (desc, contact) in enumerate(test_contacts, 1):
        print(f"\nüîç –¢–µ—Å—Ç {i}: {desc} -> '{contact}'")
        try:
            await BookingManager._notify_restaurant(
                booking_number=9000 + i,
                booking_data=booking_data,
                restaurant_contact=contact,
                user=user
            )
            print(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üìã –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ª–æ–≥–∞—Ö: tail -f logs/bot.log | grep BOOKING")

if __name__ == "__main__":
    asyncio.run(test_notification_system()) 