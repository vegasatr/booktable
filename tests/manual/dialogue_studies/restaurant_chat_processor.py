#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–¢–ï–ö–°–¢–ù–û–ì–û –ü–†–û–¶–ï–°–°–û–†–ê –†–ï–°–¢–û–†–ê–ù–û–í
===============================================

–ú–æ–¥—É–ª—å –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã AI-powered –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞.
–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞–∫ AI –≤—ã–±–∏—Ä–∞–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –ø–æ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤.

–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è:
- –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ AI-–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
- –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
- –ò–∑—É—á–µ–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–∂–∞—Ç–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
- –ê–Ω–∞–ª–∏–∑–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

–ó–ê–ü–£–°–ö: python tests/manual/dialogue_studies/restaurant_chat_processor.py
"""

import sys
import os
import asyncio

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ PATH
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..', '..')))

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –¥–ª—è —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–µ
SAMPLE_RESTAURANTS = [
    {
        'name': 'Acqua Restaurant',
        'cuisine': '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è, –ï–≤—Ä–æ–ø–µ–π—Å–∫–∞—è',
        'area': 'patong',
        'address': 'Kalim Beach, –ü–∞—Ç–æ–Ω–≥',
        'phone': '+66 76 302 324',
        'average_check': '$$$',
        'rating': 4.5,
        'features': ['–í–∏–¥ –Ω–∞ –º–æ—Ä–µ', '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞', '–í–∏–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞', '–ü–∞—Ä–∫–æ–≤–∫–∞'],
        'description': '–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω —Å –ø–æ—Ç—Ä—è—Å–∞—é—â–∏–º –≤–∏–¥–æ–º –Ω–∞ –º–æ—Ä–µ. –ò–¥–µ–∞–ª—å–Ω–æ –¥–ª—è —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö —É–∂–∏–Ω–æ–≤.',
        'working_hours': '18:00-23:00',
        'popular_dishes': ['–†–∏–∑–æ—Ç—Ç–æ —Å –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏', '–°—Ç–µ–π–∫ –∏–∑ —Ç—É–Ω—Ü–∞', '–¢–∏—Ä–∞–º–∏—Å—É']
    },
    {
        'name': 'Blue Elephant Phuket',
        'cuisine': '–¢–∞–π—Å–∫–∞—è',
        'area': 'phuket_town',
        'address': '96 Krabi Road, –ü—Ö—É–∫–µ—Ç –¢–∞—É–Ω',
        'phone': '+66 76 354 355',
        'average_check': '$$$$',
        'rating': 4.8,
        'features': ['–ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–µ –∑–¥–∞–Ω–∏–µ', '–¢—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞', '–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ –º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã'],
        'description': '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π —Ç–∞–π—Å–∫–∏–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –≤ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–æ–º –æ—Å–æ–±–Ω—è–∫–µ. –ò–∑—ã—Å–∫–∞–Ω–Ω–∞—è —Ç–∞–π—Å–∫–∞—è –∫—É—Ö–Ω—è.',
        'working_hours': '11:30-14:30, 18:30-22:30',
        'popular_dishes': ['–¢–æ–º —è–º —Å –æ–º–∞—Ä–∞–º–∏', '–ú–∞—Å—Å–∞–º–∞–Ω –∫–∞—Ä—Ä–∏', '–ú–∞–Ω–≥–æ —Å –∫–ª–µ–π–∫–∏–º —Ä–∏—Å–æ–º']
    },
    {
        'name': 'La Gritta',
        'cuisine': '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∞—è',
        'area': 'patong',
        'address': 'Amari Phuket, –ü–∞—Ç–æ–Ω–≥ –ë–∏—á',
        'phone': '+66 76 340 106',
        'average_check': '$$$',
        'rating': 4.3,
        'features': ['–ü–ª—è–∂–Ω–∞—è –ª–æ–∫–∞—Ü–∏—è', '–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π —à–µ—Ñ-–ø–æ–≤–∞—Ä', '–°–µ–º–µ–π–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞'],
        'description': '–ê—É—Ç–µ–Ω—Ç–∏—á–Ω–∞—è –∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è –∫—É—Ö–Ω—è –ø—Ä—è–º–æ –Ω–∞ –ø–ª—è–∂–µ –ü–∞—Ç–æ–Ω–≥.',
        'working_hours': '18:00-23:00',
        'popular_dishes': ['–ü–∏—Ü—Ü–∞ –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞', '–ü–∞—Å—Ç–∞ –ö–∞—Ä–±–æ–Ω–∞—Ä–∞', '–î–∂–µ–ª–∞—Ç–æ']
    },
    {
        'name': 'Kan Eang @ Pier',
        'cuisine': '–ú–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã, –¢–∞–π—Å–∫–∞—è',
        'area': 'chalong',
        'address': 'Chalong Pier, –ß–∞–ª–æ–Ω–≥',
        'phone': '+66 76 381 323',
        'average_check': '$$',
        'rating': 4.4,
        'features': ['–í–∏–¥ –Ω–∞ –º–∞—Ä–∏–Ω—É', '–°–≤–µ–∂–∏–µ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã', '–ú–µ—Å—Ç–Ω–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞', '–ü–∞—Ä–∫–æ–≤–∫–∞'],
        'description': '–ü–æ–ø—É–ª—è—Ä–Ω—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç–æ–≤ —Å –≤–∏–¥–æ–º –Ω–∞ –ø—Ä–∏—Å—Ç–∞–Ω—å –ß–∞–ª–æ–Ω–≥.',
        'working_hours': '10:00-22:00',
        'popular_dishes': ['–û–º–∞—Ä –Ω–∞ –≥—Ä–∏–ª–µ', '–¢–æ–º —è–º —Å –∫—Ä–µ–≤–µ—Ç–∫–∞–º–∏', '–ñ–∞—Ä–µ–Ω—ã–π –∫—Ä–∞–±']
    }
]

async def test_context_processor_relevance():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å AI-–ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞"""
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
    from src.bot.ai.core import get_relevant_restaurant_data
    
    test_cases = [
        {
            "question": "–ì–¥–µ –ø–æ–µ—Å—Ç—å —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ –Ω–∞ —É–∂–∏–Ω?",
            "expected_restaurants": ["Acqua Restaurant"],
            "expected_features": ["—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è", "–≤–∏–¥ –Ω–∞ –º–æ—Ä–µ"],
            "not_expected": ["—Å–µ–º–µ–π–Ω–∞—è", "–º–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã"]
        },
        {
            "question": "–ò—â—É –∞—É—Ç–µ–Ω—Ç–∏—á–Ω—É—é —Ç–∞–π—Å–∫—É—é –∫—É—Ö–Ω—é",
            "expected_restaurants": ["Blue Elephant Phuket"],
            "expected_features": ["—Ç–∞–π—Å–∫–∞—è", "—Ç—Ä–∞–¥–∏—Ü–∏–æ–Ω–Ω–∞—è"],
            "not_expected": ["–∏—Ç–∞–ª—å—è–Ω—Å–∫–∞—è", "–ø–∏—Ü—Ü–∞"]
        },
        {
            "question": "–°–µ–º–µ–π–Ω—ã–π —É–∂–∏–Ω –Ω–∞ –ø–ª—è–∂–µ —Å –¥–µ—Ç—å–º–∏",
            "expected_restaurants": ["La Gritta"],
            "expected_features": ["—Å–µ–º–µ–π–Ω–∞—è", "–ø–ª—è–∂"],
            "not_expected": ["–ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–π", "–∏–∑—ã—Å–∫–∞–Ω–Ω–∞—è"]
        },
        {
            "question": "–°–≤–µ–∂–∏–µ –º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã, –º–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ",
            "expected_restaurants": ["Kan Eang @ Pier"],
            "expected_features": ["–º–æ—Ä–µ–ø—Ä–æ–¥—É–∫—Ç—ã", "–º–µ—Å—Ç–Ω–∞—è"],
            "not_expected": ["–∏—Ç–∞–ª—å—è–Ω—Å–∫–∏–π", "–≤–∏–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞"]
        }
    ]
    
    print("üîç –¢–ï–°–¢ –†–ï–õ–ï–í–ê–ù–¢–ù–û–°–¢–ò –ö–û–ù–¢–ï–ö–°–¢–ù–û–ì–û –ü–†–û–¶–ï–°–°–û–†–ê")
    print("=" * 80)
    
    total_score = 0
    
    for i, test_case in enumerate(test_cases, 1):
        print(f"\nüìù –¢–µ—Å—Ç {i}: {test_case['question']}")
        print("-" * 60)
        
        # –ü–æ–ª—É—á–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç AI
        optimized_data = await get_relevant_restaurant_data(
            test_case['question'], 
            SAMPLE_RESTAURANTS, 
            'ru'
        )
        
        print(f"üìä AI –≤—ã–±—Ä–∞–ª –¥–∞–Ω–Ω—ã–µ ({len(optimized_data)} —Å–∏–º–≤–æ–ª–æ–≤):")
        print(optimized_data[:300] + "..." if len(optimized_data) > 300 else optimized_data)
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å
        score = 0
        max_score = len(test_case['expected_restaurants']) + len(test_case['expected_features'])
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã
        for restaurant in test_case['expected_restaurants']:
            if restaurant.lower() in optimized_data.lower():
                score += 1
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω: {restaurant}")
            else:
                print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –æ–∂–∏–¥–∞–µ–º—ã–π —Ä–µ—Å—Ç–æ—Ä–∞–Ω: {restaurant}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∂–∏–¥–∞–µ–º—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏
        for feature in test_case['expected_features']:
            if feature.lower() in optimized_data.lower():
                score += 1
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –æ–∂–∏–¥–∞–µ–º–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: {feature}")
            else:
                print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ –æ–∂–∏–¥–∞–µ–º–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: {feature}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω–æ–µ –Ω–µ –ø–æ–ø–∞–ª–æ
        unwanted_found = []
        for unwanted in test_case['not_expected']:
            if unwanted.lower() in optimized_data.lower():
                unwanted_found.append(unwanted)
        
        if unwanted_found:
            print(f"‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω—ã –Ω–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã: {unwanted_found}")
        else:
            print("‚úÖ –ù–µ–∂–µ–ª–∞—Ç–µ–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã")
        
        test_score = (score / max_score) * 100 if max_score > 0 else 0
        total_score += test_score
        
        print(f"üìä –û—Ü–µ–Ω–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏: {test_score:.1f}%")
    
    avg_score = total_score / len(test_cases)
    print(f"\nüéØ –û–ë–©–ê–Ø –û–¶–ï–ù–ö–ê –†–ï–õ–ï–í–ê–ù–¢–ù–û–°–¢–ò: {avg_score:.1f}%")
    
    if avg_score >= 80:
        print("üèÜ –û–¢–õ–ò–ß–ù–û - AI —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –≤—ã–±–∏—Ä–∞–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    elif avg_score >= 60:
        print("‚úÖ –•–û–†–û–®–û - AI –≤ —Ü–µ–ª–æ–º —Å–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å –∑–∞–¥–∞—á–µ–π")
    else:
        print("‚ö†Ô∏è  –¢–†–ï–ë–£–ï–¢ –£–õ–£–ß–®–ï–ù–ò–Ø - –Ω—É–∂–Ω–æ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–ø—Ç—ã")

async def analyze_compression_efficiency():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∂–∞—Ç–∏—è –¥–∞–Ω–Ω—ã—Ö AI –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–æ–º"""
    
    from src.bot.ai.core import get_relevant_restaurant_data
    
    print(f"\nüìà –ê–ù–ê–õ–ò–ó –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–ò –°–ñ–ê–¢–ò–Ø –î–ê–ù–ù–´–•")
    print("=" * 80)
    
    # –°—á–∏—Ç–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    original_size = 0
    for restaurant in SAMPLE_RESTAURANTS:
        restaurant_text = f"""
–†–µ—Å—Ç–æ—Ä–∞–Ω: {restaurant['name']}
–ö—É—Ö–Ω—è: {restaurant['cuisine']}
–†–∞–π–æ–Ω: {restaurant['area']}
–ê–¥—Ä–µ—Å: {restaurant['address']}
–¢–µ–ª–µ—Ñ–æ–Ω: {restaurant['phone']}
–°—Ä–µ–¥–Ω–∏–π —á–µ–∫: {restaurant['average_check']}
–†–µ–π—Ç–∏–Ω–≥: {restaurant['rating']}
–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏: {', '.join(restaurant['features'])}
–û–ø–∏—Å–∞–Ω–∏–µ: {restaurant['description']}
–ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã: {restaurant['working_hours']}
–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –±–ª—é–¥–∞: {', '.join(restaurant['popular_dishes'])}
"""
        original_size += len(restaurant_text)
    
    test_questions = [
        "–†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–π —É–∂–∏–Ω –¥–ª—è –¥–≤–æ–∏—Ö",
        "–°–µ–º–µ–π–Ω—ã–π –æ–±–µ–¥ —Å –¥–µ—Ç—å–º–∏", 
        "–î–µ–ª–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ",
        "–ú–µ—Å—Ç–Ω–∞—è —Ç–∞–π—Å–∫–∞—è –∫—É—Ö–Ω—è"
    ]
    
    compression_ratios = []
    
    for question in test_questions:
        optimized_data = await get_relevant_restaurant_data(question, SAMPLE_RESTAURANTS, 'ru')
        optimized_size = len(optimized_data)
        
        compression_ratio = (1 - optimized_size / original_size) * 100
        compression_ratios.append(compression_ratio)
        
        print(f"‚ùì –í–æ–ø—Ä–æ—Å: {question}")
        print(f"üìè –ò—Å—Ö–æ–¥–Ω—ã–π —Ä–∞–∑–º–µ—Ä: {original_size} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üìè –°–∂–∞—Ç—ã–π —Ä–∞–∑–º–µ—Ä: {optimized_size} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"üìä –°–∂–∞—Ç–∏–µ: {compression_ratio:.1f}%")
        print("-" * 40)
    
    avg_compression = sum(compression_ratios) / len(compression_ratios)
    print(f"\nüóúÔ∏è  –°–†–ï–î–ù–ï–ï –°–ñ–ê–¢–ò–ï: {avg_compression:.1f}%")
    
    if avg_compression >= 70:
        print("üöÄ –û–¢–õ–ò–ß–ù–û - –≤—ã—Å–æ–∫–∞—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å–∂–∞—Ç–∏—è")
    elif avg_compression >= 50:
        print("‚úÖ –•–û–†–û–®–û - —É–º–µ—Ä–µ–Ω–Ω–æ–µ —Å–∂–∞—Ç–∏–µ")
    else:
        print("‚ö†Ô∏è  –°–õ–ê–ë–û–ï –°–ñ–ê–¢–ò–ï - –≤–æ–∑–º–æ–∂–Ω–æ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –¥–∞–Ω–Ω—ã—Ö")

async def run_processor_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –≤—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞"""
    await test_context_processor_relevance()
    await analyze_compression_efficiency()

if __name__ == "__main__":
    asyncio.run(run_processor_tests()) 